plugins {
    id 'java-base'
}
apply from: "$rootDir/gradle/libs.gradle"

description = "Downloads certain tools for easier IDE setup"
configurations { tools }

dependencies {
    tools mariadbDriver
}

task downloadTools(type: Sync) {
    description = "Downloads certain tools so that IDE:s can find them in a well-known location"
    group "IDE support"

    from configurations.tools
    into file("downloaded")
}

build.dependsOn downloadTools

ext.geckoDriver = buildGeckoDriverName()
ext.chromeDriver = buildChromeDriverName()

private String getOsName() {
    System.properties['os.name'] == 'Mac OS X' ? 'macos-' : 'linux-'
}

private GString buildGeckoDriverName() {
    "geckodriver-0.19.1-${getOsName()}${System.properties['os.arch']}.bin"
}

private GString buildChromeDriverName() {
    "chromedriver-2.35-${getOsName()}${System.properties['os.arch']}.bin"
}

task downloadChromeDriver {
    description = "Downloads Chromedriver from downloads.codekvast.io to be used by web driver tests in other modules"
    group "Test support"

    def downloadDir = file("$rootDir/.tmp/download")
    def chromeDriverDownloadUrl = "http://downloads.codekvast.io/${chromeDriver}"
    def dest = file("$downloadDir/$chromeDriver")

    inputs.property "chromeDriver", chromeDriver
    outputs.file dest

    doLast {
        downloadDir.mkdirs()

        logger.lifecycle "Downloading $chromeDriverDownloadUrl ..."
        ant.get(
            src: chromeDriverDownloadUrl,
            dest: dest,
            usetimestamp: true,
            verbose: true
        )
    }
}

task downloadGeckoDriver {
    description = "Downloads Geckodriver from downloads.codekvast.io to be used by web driver tests in other modules"
    group "Test support"

    def downloadDir = file("$rootDir/.tmp/download")
    def geckoDriverDownloadUrl = "http://downloads.codekvast.io/${geckoDriver}"
    def dest = file("$downloadDir/$geckoDriver")

    inputs.property "geckoDriver", geckoDriver
    outputs.file dest

    doLast {
        downloadDir.mkdirs()

        logger.lifecycle "Downloading $geckoDriverDownloadUrl ..."
        ant.get(
            src: geckoDriverDownloadUrl,
            dest: dest,
            usetimestamp: true,
            verbose: true
        )
    }
}

plugins {
    id 'java'
    id 'application'
    id 'com.ofg.uptodate' version '1.5.0'
}
apply plugin: 'spring-boot'
apply from: "$rootDir/gradle/java-7.gradle"

description = "The Codekvast Promotion Web"
archivesBaseName = "codekvast-web"
version = project.parent.version
mainClassName = "se.crisp.codekvast.web.CodekvastPromoWebApplication"

configurations {
    springLoaded
}

dependencies {
    compile lombok
    compile 'com.google.guava:guava:18.0'
    compile 'ch.qos.logback:logback-classic'

    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'com.h2database:h2'
    compile 'org.flywaydb:flyway-core'
    compile 'com.ecwid:ecwid-mailchimp:2.0.1.0'
    compile 'net.sourceforge.pjl-comp-filter:pjl-comp-filter:1.7'

    runtime project(':product:support:websupport')
    runtime 'org.webjars:headjs:1.0.3'
    runtime 'org.webjars:jquery:2.1.3'
    runtime 'org.webjars:angularjs:1.3.11'
    runtime 'org.webjars:angular-ui-bootstrap:0.12.1'
    runtime 'org.webjars:bootstrap:3.3.2'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'

    springLoaded springLoadedAgent
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/default.properties'
        filter(ReplaceTokens, tokens: gitVersionTokens + ['gradle.name'       : project.name,
                                                          'gradle.description': project.description,
                                                          'gradle.version'    : project.version]
        )
    }
}

applicationDistribution.from("src/main/resources") {
    into "conf"
    include "logback.xml", "default.properties"
    rename {
        def name = it == "default.properties" ? "application.properties" : it
        "${name}.default"
    }
    // Hide lines starting with info.build.
    filter { line ->
        line.startsWith('info.build.') ? "" : line
    }
}

startScripts {
    doLast {
        outputs.files.each { script ->
            logger.info "Adjusting CLASSPATH in {} to start with \$APP_HOME/conf/ ...", script.name
            script.text = script.text.replace('CLASSPATH=$APP_HOME/lib', 'CLASSPATH=$APP_HOME/conf/:$APP_HOME/lib')
        }
    }
}

bootRun {
    jvmArgs = [
            "-javaagent:${configurations.springLoaded.asPath}",
            "-noverify",
            "-Dspring.thymeleaf.cache=false",
            "-Dspring.messages.cacheSeconds=1"
    ]

}

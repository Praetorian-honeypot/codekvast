/**
 * This class is generated by jOOQ
 */
package se.crisp.codekvast.server.codekvast_server.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicationsRecord extends org.jooq.impl.UpdatableRecordImpl<se.crisp.codekvast.server.codekvast_server.jooq.tables.records.ApplicationsRecord> implements org.jooq.Record7<java.lang.Long, java.lang.Long, java.lang.String, java.lang.Integer, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> {

	private static final long serialVersionUID = -1396517654;

	/**
	 * Setter for <code>PUBLIC.APPLICATIONS.ID</code>.
	 */
	public ApplicationsRecord setId(java.lang.Long value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.APPLICATIONS.ID</code>.
	 */
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.APPLICATIONS.ORGANISATION_ID</code>.
	 */
	public ApplicationsRecord setOrganisationId(java.lang.Long value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.APPLICATIONS.ORGANISATION_ID</code>.
	 */
	public java.lang.Long getOrganisationId() {
		return (java.lang.Long) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.APPLICATIONS.NAME</code>.
	 */
	public ApplicationsRecord setName(java.lang.String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.APPLICATIONS.NAME</code>.
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.APPLICATIONS.USAGE_CYCLE_SECONDS</code>. After how long can an unused signature in this application be considered dead?
	 */
	public ApplicationsRecord setUsageCycleSeconds(java.lang.Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.APPLICATIONS.USAGE_CYCLE_SECONDS</code>. After how long can an unused signature in this application be considered dead?
	 */
	public java.lang.Integer getUsageCycleSeconds() {
		return (java.lang.Integer) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.APPLICATIONS.NOTES</code>. Free text notes about the application
	 */
	public ApplicationsRecord setNotes(java.lang.String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.APPLICATIONS.NOTES</code>. Free text notes about the application
	 */
	public java.lang.String getNotes() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.APPLICATIONS.CREATED_AT</code>.
	 */
	public ApplicationsRecord setCreatedAt(java.sql.Timestamp value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.APPLICATIONS.CREATED_AT</code>.
	 */
	public java.sql.Timestamp getCreatedAt() {
		return (java.sql.Timestamp) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.APPLICATIONS.MODIFIED_AT</code>.
	 */
	public ApplicationsRecord setModifiedAt(java.sql.Timestamp value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.APPLICATIONS.MODIFIED_AT</code>.
	 */
	public java.sql.Timestamp getModifiedAt() {
		return (java.sql.Timestamp) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row7<java.lang.Long, java.lang.Long, java.lang.String, java.lang.Integer, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row7<java.lang.Long, java.lang.Long, java.lang.String, java.lang.Integer, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Applications.APPLICATIONS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field2() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Applications.APPLICATIONS.ORGANISATION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Applications.APPLICATIONS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Applications.APPLICATIONS.USAGE_CYCLE_SECONDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Applications.APPLICATIONS.NOTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field6() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Applications.APPLICATIONS.CREATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field7() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Applications.APPLICATIONS.MODIFIED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value2() {
		return getOrganisationId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getUsageCycleSeconds();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getNotes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value6() {
		return getCreatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value7() {
		return getModifiedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ApplicationsRecord value1(java.lang.Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ApplicationsRecord value2(java.lang.Long value) {
		setOrganisationId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ApplicationsRecord value3(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ApplicationsRecord value4(java.lang.Integer value) {
		setUsageCycleSeconds(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ApplicationsRecord value5(java.lang.String value) {
		setNotes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ApplicationsRecord value6(java.sql.Timestamp value) {
		setCreatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ApplicationsRecord value7(java.sql.Timestamp value) {
		setModifiedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ApplicationsRecord values(java.lang.Long value1, java.lang.Long value2, java.lang.String value3, java.lang.Integer value4, java.lang.String value5, java.sql.Timestamp value6, java.sql.Timestamp value7) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ApplicationsRecord
	 */
	public ApplicationsRecord() {
		super(se.crisp.codekvast.server.codekvast_server.jooq.tables.Applications.APPLICATIONS);
	}

	/**
	 * Create a detached, initialised ApplicationsRecord
	 */
	public ApplicationsRecord(java.lang.Long id, java.lang.Long organisationId, java.lang.String name, java.lang.Integer usageCycleSeconds, java.lang.String notes, java.sql.Timestamp createdAt, java.sql.Timestamp modifiedAt) {
		super(se.crisp.codekvast.server.codekvast_server.jooq.tables.Applications.APPLICATIONS);

		setValue(0, id);
		setValue(1, organisationId);
		setValue(2, name);
		setValue(3, usageCycleSeconds);
		setValue(4, notes);
		setValue(5, createdAt);
		setValue(6, modifiedAt);
	}
}

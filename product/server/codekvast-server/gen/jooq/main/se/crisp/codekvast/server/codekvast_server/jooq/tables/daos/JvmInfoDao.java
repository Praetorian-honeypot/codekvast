/**
 * This class is generated by jOOQ
 */
package se.crisp.codekvast.server.codekvast_server.jooq.tables.daos;

/**
 * This class is generated by jOOQ.
 *
 * Data about one JVM that is instrumented by the Codekvast Collector
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JvmInfoDao extends org.jooq.impl.DAOImpl<se.crisp.codekvast.server.codekvast_server.jooq.tables.records.JvmInfoRecord, se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo, java.lang.Long> {

	/**
	 * Create a new JvmInfoDao without any configuration
	 */
	public JvmInfoDao() {
		super(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO, se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo.class);
	}

	/**
	 * Create a new JvmInfoDao with an attached configuration
	 */
	public JvmInfoDao(org.jooq.Configuration configuration) {
		super(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO, se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Long getId(se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchById(java.lang.Long... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	public se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo fetchOneById(java.lang.Long value) {
		return fetchOne(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.ID, value);
	}

	/**
	 * Fetch records that have <code>ORGANISATION_ID IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByOrganisationId(java.lang.Long... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.ORGANISATION_ID, values);
	}

	/**
	 * Fetch records that have <code>APPLICATION_ID IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByApplicationId(java.lang.Long... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.APPLICATION_ID, values);
	}

	/**
	 * Fetch records that have <code>APPLICATION_VERSION IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByApplicationVersion(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.APPLICATION_VERSION, values);
	}

	/**
	 * Fetch records that have <code>JVM_UUID IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByJvmUuid(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.JVM_UUID, values);
	}

	/**
	 * Fetch records that have <code>AGENT_COMPUTER_ID IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByAgentComputerId(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_COMPUTER_ID, values);
	}

	/**
	 * Fetch records that have <code>AGENT_HOST_NAME IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByAgentHostName(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_HOST_NAME, values);
	}

	/**
	 * Fetch records that have <code>AGENT_CLOCK_SKEW_MILLIS IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByAgentClockSkewMillis(java.lang.Long... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_CLOCK_SKEW_MILLIS, values);
	}

	/**
	 * Fetch records that have <code>AGENT_UPLOAD_INTERVAL_SECONDS IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByAgentUploadIntervalSeconds(java.lang.Integer... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_UPLOAD_INTERVAL_SECONDS, values);
	}

	/**
	 * Fetch records that have <code>AGENT_VCS_ID IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByAgentVcsId(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_VCS_ID, values);
	}

	/**
	 * Fetch records that have <code>AGENT_VERSION IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByAgentVersion(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_VERSION, values);
	}

	/**
	 * Fetch records that have <code>COLLECTOR_COMPUTER_ID IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByCollectorComputerId(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.COLLECTOR_COMPUTER_ID, values);
	}

	/**
	 * Fetch records that have <code>COLLECTOR_HOST_NAME IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByCollectorHostName(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.COLLECTOR_HOST_NAME, values);
	}

	/**
	 * Fetch records that have <code>COLLECTOR_RESOLUTION_SECONDS IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByCollectorResolutionSeconds(java.lang.Integer... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.COLLECTOR_RESOLUTION_SECONDS, values);
	}

	/**
	 * Fetch records that have <code>COLLECTOR_VCS_ID IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByCollectorVcsId(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.COLLECTOR_VCS_ID, values);
	}

	/**
	 * Fetch records that have <code>COLLECTOR_VERSION IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByCollectorVersion(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.COLLECTOR_VERSION, values);
	}

	/**
	 * Fetch records that have <code>METHOD_VISIBILITY IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByMethodVisibility(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.METHOD_VISIBILITY, values);
	}

	/**
	 * Fetch records that have <code>STARTED_AT_MILLIS IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByStartedAtMillis(java.lang.Long... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.STARTED_AT_MILLIS, values);
	}

	/**
	 * Fetch records that have <code>REPORTED_AT_MILLIS IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByReportedAtMillis(java.lang.Long... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.REPORTED_AT_MILLIS, values);
	}

	/**
	 * Fetch records that have <code>NEXT_REPORT_EXPECTED_BEFORE_MILLIS IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByNextReportExpectedBeforeMillis(java.lang.Long... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.NEXT_REPORT_EXPECTED_BEFORE_MILLIS, values);
	}

	/**
	 * Fetch records that have <code>TAGS IN (values)</code>
	 */
	public java.util.List<se.crisp.codekvast.server.codekvast_server.jooq.tables.pojos.JvmInfo> fetchByTags(java.lang.String... values) {
		return fetch(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.TAGS, values);
	}
}

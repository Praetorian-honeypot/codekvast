/**
 * This class is generated by jOOQ
 */
package se.crisp.codekvast.server.codekvast_server.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends org.jooq.impl.UpdatableRecordImpl<se.crisp.codekvast.server.codekvast_server.jooq.tables.records.UsersRecord> implements org.jooq.Record9<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> {

	private static final long serialVersionUID = -331040545;

	/**
	 * Setter for <code>PUBLIC.USERS.ID</code>.
	 */
	public UsersRecord setId(java.lang.Long value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.USERS.ID</code>.
	 */
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.USERS.USERNAME</code>.
	 */
	public UsersRecord setUsername(java.lang.String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.USERS.USERNAME</code>.
	 */
	public java.lang.String getUsername() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.USERS.ENCODED_PASSWORD</code>.
	 */
	public UsersRecord setEncodedPassword(java.lang.String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.USERS.ENCODED_PASSWORD</code>.
	 */
	public java.lang.String getEncodedPassword() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.USERS.PLAINTEXT_PASSWORD</code>. Will be replaced by an encoded password at application startup
	 */
	public UsersRecord setPlaintextPassword(java.lang.String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.USERS.PLAINTEXT_PASSWORD</code>. Will be replaced by an encoded password at application startup
	 */
	public java.lang.String getPlaintextPassword() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.USERS.ENABLED</code>.
	 */
	public UsersRecord setEnabled(java.lang.Boolean value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.USERS.ENABLED</code>.
	 */
	public java.lang.Boolean getEnabled() {
		return (java.lang.Boolean) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.USERS.EMAIL_ADDRESS</code>.
	 */
	public UsersRecord setEmailAddress(java.lang.String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.USERS.EMAIL_ADDRESS</code>.
	 */
	public java.lang.String getEmailAddress() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.USERS.FULL_NAME</code>.
	 */
	public UsersRecord setFullName(java.lang.String value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.USERS.FULL_NAME</code>.
	 */
	public java.lang.String getFullName() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>PUBLIC.USERS.CREATED_AT</code>.
	 */
	public UsersRecord setCreatedAt(java.sql.Timestamp value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.USERS.CREATED_AT</code>.
	 */
	public java.sql.Timestamp getCreatedAt() {
		return (java.sql.Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>PUBLIC.USERS.MODIFIED_AT</code>.
	 */
	public UsersRecord setModifiedAt(java.sql.Timestamp value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.USERS.MODIFIED_AT</code>.
	 */
	public java.sql.Timestamp getModifiedAt() {
		return (java.sql.Timestamp) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS.ENCODED_PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS.PLAINTEXT_PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field5() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS.ENABLED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS.EMAIL_ADDRESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS.FULL_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field8() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS.CREATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field9() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS.MODIFIED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getEncodedPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getPlaintextPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value5() {
		return getEnabled();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getEmailAddress();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getFullName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value8() {
		return getCreatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value9() {
		return getModifiedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord value1(java.lang.Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord value2(java.lang.String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord value3(java.lang.String value) {
		setEncodedPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord value4(java.lang.String value) {
		setPlaintextPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord value5(java.lang.Boolean value) {
		setEnabled(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord value6(java.lang.String value) {
		setEmailAddress(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord value7(java.lang.String value) {
		setFullName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord value8(java.sql.Timestamp value) {
		setCreatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord value9(java.sql.Timestamp value) {
		setModifiedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersRecord values(java.lang.Long value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.Boolean value5, java.lang.String value6, java.lang.String value7, java.sql.Timestamp value8, java.sql.Timestamp value9) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UsersRecord
	 */
	public UsersRecord() {
		super(se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS);
	}

	/**
	 * Create a detached, initialised UsersRecord
	 */
	public UsersRecord(java.lang.Long id, java.lang.String username, java.lang.String encodedPassword, java.lang.String plaintextPassword, java.lang.Boolean enabled, java.lang.String emailAddress, java.lang.String fullName, java.sql.Timestamp createdAt, java.sql.Timestamp modifiedAt) {
		super(se.crisp.codekvast.server.codekvast_server.jooq.tables.Users.USERS);

		setValue(0, id);
		setValue(1, username);
		setValue(2, encodedPassword);
		setValue(3, plaintextPassword);
		setValue(4, enabled);
		setValue(5, emailAddress);
		setValue(6, fullName);
		setValue(7, createdAt);
		setValue(8, modifiedAt);
	}
}

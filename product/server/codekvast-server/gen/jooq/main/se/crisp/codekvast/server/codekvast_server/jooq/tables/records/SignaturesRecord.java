/**
 * This class is generated by jOOQ
 */
package se.crisp.codekvast.server.codekvast_server.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SignaturesRecord extends org.jooq.impl.TableRecordImpl<se.crisp.codekvast.server.codekvast_server.jooq.tables.records.SignaturesRecord> implements org.jooq.Record7<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.lang.Long, java.lang.Long, java.lang.Byte> {

	private static final long serialVersionUID = 1040671978;

	/**
	 * Setter for <code>PUBLIC.SIGNATURES.ORGANISATION_ID</code>.
	 */
	public SignaturesRecord setOrganisationId(java.lang.Long value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.SIGNATURES.ORGANISATION_ID</code>.
	 */
	public java.lang.Long getOrganisationId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.SIGNATURES.APPLICATION_ID</code>.
	 */
	public SignaturesRecord setApplicationId(java.lang.Long value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.SIGNATURES.APPLICATION_ID</code>.
	 */
	public java.lang.Long getApplicationId() {
		return (java.lang.Long) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.SIGNATURES.JVM_ID</code>.
	 */
	public SignaturesRecord setJvmId(java.lang.Long value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.SIGNATURES.JVM_ID</code>.
	 */
	public java.lang.Long getJvmId() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.SIGNATURES.SIGNATURE</code>. The method signature in human readable format
	 */
	public SignaturesRecord setSignature(java.lang.String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.SIGNATURES.SIGNATURE</code>. The method signature in human readable format
	 */
	public java.lang.String getSignature() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.SIGNATURES.INVOKED_AT_MILLIS</code>. The value of System.currentTimeMillis() at the beginning of the collection interval in which the method was invoked.
  0 means not yet invoked
	 */
	public SignaturesRecord setInvokedAtMillis(java.lang.Long value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.SIGNATURES.INVOKED_AT_MILLIS</code>. The value of System.currentTimeMillis() at the beginning of the collection interval in which the method was invoked.
  0 means not yet invoked
	 */
	public java.lang.Long getInvokedAtMillis() {
		return (java.lang.Long) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.SIGNATURES.MILLIS_SINCE_JVM_START</code>. The delta between invoked_at_millis and the instant the JVM started
	 */
	public SignaturesRecord setMillisSinceJvmStart(java.lang.Long value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.SIGNATURES.MILLIS_SINCE_JVM_START</code>. The delta between invoked_at_millis and the instant the JVM started
	 */
	public java.lang.Long getMillisSinceJvmStart() {
		return (java.lang.Long) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.SIGNATURES.CONFIDENCE</code>. The ordinal for se.crisp.codekvast.server.agent_api.model.v1.SignatureConfidence. NULL for not yet invoked.
	 */
	public SignaturesRecord setConfidence(java.lang.Byte value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.SIGNATURES.CONFIDENCE</code>. The ordinal for se.crisp.codekvast.server.agent_api.model.v1.SignatureConfidence. NULL for not yet invoked.
	 */
	public java.lang.Byte getConfidence() {
		return (java.lang.Byte) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row7<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.lang.Long, java.lang.Long, java.lang.Byte> fieldsRow() {
		return (org.jooq.Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row7<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.lang.Long, java.lang.Long, java.lang.Byte> valuesRow() {
		return (org.jooq.Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Signatures.SIGNATURES.ORGANISATION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field2() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Signatures.SIGNATURES.APPLICATION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Signatures.SIGNATURES.JVM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Signatures.SIGNATURES.SIGNATURE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field5() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Signatures.SIGNATURES.INVOKED_AT_MILLIS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field6() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Signatures.SIGNATURES.MILLIS_SINCE_JVM_START;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field7() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.Signatures.SIGNATURES.CONFIDENCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getOrganisationId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value2() {
		return getApplicationId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getJvmId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getSignature();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value5() {
		return getInvokedAtMillis();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value6() {
		return getMillisSinceJvmStart();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value7() {
		return getConfidence();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignaturesRecord value1(java.lang.Long value) {
		setOrganisationId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignaturesRecord value2(java.lang.Long value) {
		setApplicationId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignaturesRecord value3(java.lang.Long value) {
		setJvmId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignaturesRecord value4(java.lang.String value) {
		setSignature(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignaturesRecord value5(java.lang.Long value) {
		setInvokedAtMillis(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignaturesRecord value6(java.lang.Long value) {
		setMillisSinceJvmStart(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignaturesRecord value7(java.lang.Byte value) {
		setConfidence(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SignaturesRecord values(java.lang.Long value1, java.lang.Long value2, java.lang.Long value3, java.lang.String value4, java.lang.Long value5, java.lang.Long value6, java.lang.Byte value7) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SignaturesRecord
	 */
	public SignaturesRecord() {
		super(se.crisp.codekvast.server.codekvast_server.jooq.tables.Signatures.SIGNATURES);
	}

	/**
	 * Create a detached, initialised SignaturesRecord
	 */
	public SignaturesRecord(java.lang.Long organisationId, java.lang.Long applicationId, java.lang.Long jvmId, java.lang.String signature, java.lang.Long invokedAtMillis, java.lang.Long millisSinceJvmStart, java.lang.Byte confidence) {
		super(se.crisp.codekvast.server.codekvast_server.jooq.tables.Signatures.SIGNATURES);

		setValue(0, organisationId);
		setValue(1, applicationId);
		setValue(2, jvmId);
		setValue(3, signature);
		setValue(4, invokedAtMillis);
		setValue(5, millisSinceJvmStart);
		setValue(6, confidence);
	}
}

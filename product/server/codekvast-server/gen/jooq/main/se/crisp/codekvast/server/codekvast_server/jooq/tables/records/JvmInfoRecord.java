/**
 * This class is generated by jOOQ
 */
package se.crisp.codekvast.server.codekvast_server.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 *
 * Data about one JVM that is instrumented by the Codekvast Collector
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JvmInfoRecord extends org.jooq.impl.UpdatableRecordImpl<se.crisp.codekvast.server.codekvast_server.jooq.tables.records.JvmInfoRecord> implements org.jooq.Record21<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String> {

	private static final long serialVersionUID = -1048054059;

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.ID</code>.
	 */
	public JvmInfoRecord setId(java.lang.Long value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.ID</code>.
	 */
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.ORGANISATION_ID</code>.
	 */
	public JvmInfoRecord setOrganisationId(java.lang.Long value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.ORGANISATION_ID</code>.
	 */
	public java.lang.Long getOrganisationId() {
		return (java.lang.Long) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.APPLICATION_ID</code>.
	 */
	public JvmInfoRecord setApplicationId(java.lang.Long value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.APPLICATION_ID</code>.
	 */
	public java.lang.Long getApplicationId() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.APPLICATION_VERSION</code>.
	 */
	public JvmInfoRecord setApplicationVersion(java.lang.String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.APPLICATION_VERSION</code>.
	 */
	public java.lang.String getApplicationVersion() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.JVM_UUID</code>. The UUID generated by each Codekvast Collector instance
	 */
	public JvmInfoRecord setJvmUuid(java.lang.String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.JVM_UUID</code>. The UUID generated by each Codekvast Collector instance
	 */
	public java.lang.String getJvmUuid() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.AGENT_COMPUTER_ID</code>. The se.crisp.codekvast.agent.util.ComputerID value generated by the Codekvast Agent
	 */
	public JvmInfoRecord setAgentComputerId(java.lang.String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.AGENT_COMPUTER_ID</code>. The se.crisp.codekvast.agent.util.ComputerID value generated by the Codekvast Agent
	 */
	public java.lang.String getAgentComputerId() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.AGENT_HOST_NAME</code>. The hostname of the machine in which Codekvast Agent executes
	 */
	public JvmInfoRecord setAgentHostName(java.lang.String value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.AGENT_HOST_NAME</code>. The hostname of the machine in which Codekvast Agent executes
	 */
	public java.lang.String getAgentHostName() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.AGENT_CLOCK_SKEW_MILLIS</code>. The value of System.currentTimeMillis() in the agent when the latest JVM info was sent
	 */
	public JvmInfoRecord setAgentClockSkewMillis(java.lang.Long value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.AGENT_CLOCK_SKEW_MILLIS</code>. The value of System.currentTimeMillis() in the agent when the latest JVM info was sent
	 */
	public java.lang.Long getAgentClockSkewMillis() {
		return (java.lang.Long) getValue(7);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.AGENT_UPLOAD_INTERVAL_SECONDS</code>. The interval between uploads from this agent (seconds)
	 */
	public JvmInfoRecord setAgentUploadIntervalSeconds(java.lang.Integer value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.AGENT_UPLOAD_INTERVAL_SECONDS</code>. The interval between uploads from this agent (seconds)
	 */
	public java.lang.Integer getAgentUploadIntervalSeconds() {
		return (java.lang.Integer) getValue(8);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.AGENT_VCS_ID</code>. The Git hash of Codekvast Agent used for uploading the data
	 */
	public JvmInfoRecord setAgentVcsId(java.lang.String value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.AGENT_VCS_ID</code>. The Git hash of Codekvast Agent used for uploading the data
	 */
	public java.lang.String getAgentVcsId() {
		return (java.lang.String) getValue(9);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.AGENT_VERSION</code>. The version of Codekvast Agent used for uploading the data
	 */
	public JvmInfoRecord setAgentVersion(java.lang.String value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.AGENT_VERSION</code>. The version of Codekvast Agent used for uploading the data
	 */
	public java.lang.String getAgentVersion() {
		return (java.lang.String) getValue(10);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.COLLECTOR_COMPUTER_ID</code>. The se.crisp.codekvast.agent.util.ComputerID value generated by the Codekvast Collector
	 */
	public JvmInfoRecord setCollectorComputerId(java.lang.String value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.COLLECTOR_COMPUTER_ID</code>. The se.crisp.codekvast.agent.util.ComputerID value generated by the Codekvast Collector
	 */
	public java.lang.String getCollectorComputerId() {
		return (java.lang.String) getValue(11);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.COLLECTOR_HOST_NAME</code>. The hostname of the machine in which Codekvast Collector executes
	 */
	public JvmInfoRecord setCollectorHostName(java.lang.String value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.COLLECTOR_HOST_NAME</code>. The hostname of the machine in which Codekvast Collector executes
	 */
	public java.lang.String getCollectorHostName() {
		return (java.lang.String) getValue(12);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.COLLECTOR_RESOLUTION_SECONDS</code>.
	 */
	public JvmInfoRecord setCollectorResolutionSeconds(java.lang.Integer value) {
		setValue(13, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.COLLECTOR_RESOLUTION_SECONDS</code>.
	 */
	public java.lang.Integer getCollectorResolutionSeconds() {
		return (java.lang.Integer) getValue(13);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.COLLECTOR_VCS_ID</code>. The Git hash of Codekvast used for collecting the data
	 */
	public JvmInfoRecord setCollectorVcsId(java.lang.String value) {
		setValue(14, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.COLLECTOR_VCS_ID</code>. The Git hash of Codekvast used for collecting the data
	 */
	public java.lang.String getCollectorVcsId() {
		return (java.lang.String) getValue(14);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.COLLECTOR_VERSION</code>. The version of Codekvast used for collecting the data
	 */
	public JvmInfoRecord setCollectorVersion(java.lang.String value) {
		setValue(15, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.COLLECTOR_VERSION</code>. The version of Codekvast used for collecting the data
	 */
	public java.lang.String getCollectorVersion() {
		return (java.lang.String) getValue(15);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.METHOD_VISIBILITY</code>. Which methods are being tracked?
	 */
	public JvmInfoRecord setMethodVisibility(java.lang.String value) {
		setValue(16, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.METHOD_VISIBILITY</code>. Which methods are being tracked?
	 */
	public java.lang.String getMethodVisibility() {
		return (java.lang.String) getValue(16);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.STARTED_AT_MILLIS</code>. The value of System.currentTimeMillis() when Codekvast Collector instance was started
	 */
	public JvmInfoRecord setStartedAtMillis(java.lang.Long value) {
		setValue(17, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.STARTED_AT_MILLIS</code>. The value of System.currentTimeMillis() when Codekvast Collector instance was started
	 */
	public java.lang.Long getStartedAtMillis() {
		return (java.lang.Long) getValue(17);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.REPORTED_AT_MILLIS</code>. The value of System.currentTimeMillis() when Codekvast Collector made an output of the collected data
	 */
	public JvmInfoRecord setReportedAtMillis(java.lang.Long value) {
		setValue(18, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.REPORTED_AT_MILLIS</code>. The value of System.currentTimeMillis() when Codekvast Collector made an output of the collected data
	 */
	public java.lang.Long getReportedAtMillis() {
		return (java.lang.Long) getValue(18);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.NEXT_REPORT_EXPECTED_BEFORE_MILLIS</code>. The timestamp before next report is expected
	 */
	public JvmInfoRecord setNextReportExpectedBeforeMillis(java.lang.Long value) {
		setValue(19, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.NEXT_REPORT_EXPECTED_BEFORE_MILLIS</code>. The timestamp before next report is expected
	 */
	public java.lang.Long getNextReportExpectedBeforeMillis() {
		return (java.lang.Long) getValue(19);
	}

	/**
	 * Setter for <code>PUBLIC.JVM_INFO.TAGS</code>. Any tags that were set in codekvast-collector.conf
	 */
	public JvmInfoRecord setTags(java.lang.String value) {
		setValue(20, value);
		return this;
	}

	/**
	 * Getter for <code>PUBLIC.JVM_INFO.TAGS</code>. Any tags that were set in codekvast-collector.conf
	 */
	public java.lang.String getTags() {
		return (java.lang.String) getValue(20);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record21 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row21<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String> fieldsRow() {
		return (org.jooq.Row21) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row21<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String> valuesRow() {
		return (org.jooq.Row21) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field2() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.ORGANISATION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.APPLICATION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.APPLICATION_VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.JVM_UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_COMPUTER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_HOST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field8() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_CLOCK_SKEW_MILLIS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field9() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_UPLOAD_INTERVAL_SECONDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field10() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_VCS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field11() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.AGENT_VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field12() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.COLLECTOR_COMPUTER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field13() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.COLLECTOR_HOST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field14() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.COLLECTOR_RESOLUTION_SECONDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field15() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.COLLECTOR_VCS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field16() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.COLLECTOR_VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field17() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.METHOD_VISIBILITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field18() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.STARTED_AT_MILLIS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field19() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.REPORTED_AT_MILLIS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field20() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.NEXT_REPORT_EXPECTED_BEFORE_MILLIS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field21() {
		return se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO.TAGS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value2() {
		return getOrganisationId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getApplicationId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getApplicationVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getJvmUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getAgentComputerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getAgentHostName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value8() {
		return getAgentClockSkewMillis();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value9() {
		return getAgentUploadIntervalSeconds();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value10() {
		return getAgentVcsId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value11() {
		return getAgentVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value12() {
		return getCollectorComputerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value13() {
		return getCollectorHostName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value14() {
		return getCollectorResolutionSeconds();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value15() {
		return getCollectorVcsId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value16() {
		return getCollectorVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value17() {
		return getMethodVisibility();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value18() {
		return getStartedAtMillis();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value19() {
		return getReportedAtMillis();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value20() {
		return getNextReportExpectedBeforeMillis();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value21() {
		return getTags();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value1(java.lang.Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value2(java.lang.Long value) {
		setOrganisationId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value3(java.lang.Long value) {
		setApplicationId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value4(java.lang.String value) {
		setApplicationVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value5(java.lang.String value) {
		setJvmUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value6(java.lang.String value) {
		setAgentComputerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value7(java.lang.String value) {
		setAgentHostName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value8(java.lang.Long value) {
		setAgentClockSkewMillis(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value9(java.lang.Integer value) {
		setAgentUploadIntervalSeconds(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value10(java.lang.String value) {
		setAgentVcsId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value11(java.lang.String value) {
		setAgentVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value12(java.lang.String value) {
		setCollectorComputerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value13(java.lang.String value) {
		setCollectorHostName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value14(java.lang.Integer value) {
		setCollectorResolutionSeconds(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value15(java.lang.String value) {
		setCollectorVcsId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value16(java.lang.String value) {
		setCollectorVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value17(java.lang.String value) {
		setMethodVisibility(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value18(java.lang.Long value) {
		setStartedAtMillis(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value19(java.lang.Long value) {
		setReportedAtMillis(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value20(java.lang.Long value) {
		setNextReportExpectedBeforeMillis(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord value21(java.lang.String value) {
		setTags(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JvmInfoRecord values(java.lang.Long value1, java.lang.Long value2, java.lang.Long value3, java.lang.String value4, java.lang.String value5, java.lang.String value6, java.lang.String value7, java.lang.Long value8, java.lang.Integer value9, java.lang.String value10, java.lang.String value11, java.lang.String value12, java.lang.String value13, java.lang.Integer value14, java.lang.String value15, java.lang.String value16, java.lang.String value17, java.lang.Long value18, java.lang.Long value19, java.lang.Long value20, java.lang.String value21) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached JvmInfoRecord
	 */
	public JvmInfoRecord() {
		super(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO);
	}

	/**
	 * Create a detached, initialised JvmInfoRecord
	 */
	public JvmInfoRecord(java.lang.Long id, java.lang.Long organisationId, java.lang.Long applicationId, java.lang.String applicationVersion, java.lang.String jvmUuid, java.lang.String agentComputerId, java.lang.String agentHostName, java.lang.Long agentClockSkewMillis, java.lang.Integer agentUploadIntervalSeconds, java.lang.String agentVcsId, java.lang.String agentVersion, java.lang.String collectorComputerId, java.lang.String collectorHostName, java.lang.Integer collectorResolutionSeconds, java.lang.String collectorVcsId, java.lang.String collectorVersion, java.lang.String methodVisibility, java.lang.Long startedAtMillis, java.lang.Long reportedAtMillis, java.lang.Long nextReportExpectedBeforeMillis, java.lang.String tags) {
		super(se.crisp.codekvast.server.codekvast_server.jooq.tables.JvmInfo.JVM_INFO);

		setValue(0, id);
		setValue(1, organisationId);
		setValue(2, applicationId);
		setValue(3, applicationVersion);
		setValue(4, jvmUuid);
		setValue(5, agentComputerId);
		setValue(6, agentHostName);
		setValue(7, agentClockSkewMillis);
		setValue(8, agentUploadIntervalSeconds);
		setValue(9, agentVcsId);
		setValue(10, agentVersion);
		setValue(11, collectorComputerId);
		setValue(12, collectorHostName);
		setValue(13, collectorResolutionSeconds);
		setValue(14, collectorVcsId);
		setValue(15, collectorVersion);
		setValue(16, methodVisibility);
		setValue(17, startedAtMillis);
		setValue(18, reportedAtMillis);
		setValue(19, nextReportExpectedBeforeMillis);
		setValue(20, tags);
	}
}

apply plugin: 'distribution'
apply plugin: 'com.github.mgk.gradle.s3'
apply plugin: 'org.kordamp.markdown.convert'

import com.github.mgk.gradle.*

description = 'Package codekvast-agent.zip and uploads it to http://download.codekvast.io'

distributions {

    agent {
        baseName = "codekvast-agent-$codekvastVersion"
        contents {
            from(file('src/dist/codekvast.conf')) {
                into "/"
                expand(project.properties)
            }

            from([
                tasks.getByPath(':product:java-agent:javaagents'),
                file("$rootDir/RELEASE-NOTES.md"),
                file("$rootDir/LICENSE"),
            ]) {
                into "/codekvast"
            }
        }
    }

}

s3 {
    profile = 'codekvast'
    bucket = codekvastDownloadPrefix - 'http://' - 'https://'
}

task uploadJavaAgentDistZip(type: S3Upload, dependsOn: agentDistZip) {
    description "Uploads codekvast-agent-${codekvastVersion}.zip to $codekvastDownloadPrefix"
    group "publish"

    file agentDistZip.outputs.files.asPath
    key "codekvast-agent-${codekvastVersion}.zip"
}

task fetchReleaseNotesMd(type: Sync) {
    from(rootDir) {
        include "RELEASE-NOTES.md"
    }
    into "$buildDir/markdown"
}

markdownToHtml {
    dependsOn fetchReleaseNotesMd
    sourceDir file("$buildDir/markdown")
    outputDir file("$buildDir/gen-html")
    inputEncoding 'UTF-8'
    outputEncoding 'UTF-8'
}

task uploadReleaseNotes(type: S3Upload, dependsOn: markdownToHtml) {
    description "Uploads RELEASE-NOTES.html to $codekvastDownloadPrefix"
    group "publish"

    file "$buildDir/gen-html/RELEASE-NOTES.html"
    key 'RELEASE-NOTES.html'
    overwrite true
}

task createIndexHtml(type: Copy) {
    description "Creates index.html"
    group "publish"

    from file('src/html/index.html')
    into "$buildDir/gen-html"
    expand(project.properties)
}

task uploadIndexHtml(type: S3Upload, dependsOn: createIndexHtml) {
    description "Uploads index.html to $codekvastDownloadPrefix"
    group "publish"

    file "$buildDir/gen-html/index.html"
    key 'index.html'
    overwrite true
}

task uploadLogo(type: S3Upload) {
    description "Uploads the logo to $codekvastDownloadPrefix"
    group "publish"

    file "$rootDir/product/graphics/logo-feathers-60x104.png"
    key 'assets/logo-feathers-60x104.png'
    overwrite true
}

task uploadToS3 {
    dependsOn uploadLogo, uploadReleaseNotes, uploadIndexHtml, uploadJavaAgentDistZip
}

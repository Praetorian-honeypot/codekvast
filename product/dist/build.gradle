apply plugin: 'distribution'
apply plugin: 'com.jfrog.bintray'
description = 'Packaging Codekvast for distribution'

distributions {

    agent {
        baseName = "codekvast-agent-$codekvastVersion"
        contents {
            from(file('src/dist/codekvast.conf')) {
                into "/"
                expand(project.properties)
            }

            from([
                tasks.getByPath(':product:java-agent:javaagents'),
                file("$rootDir/RELEASE-NOTES.md"),
                file("$rootDir/LICENSE"),
            ]) {
                into "/codekvast"
            }
        }
    }

    dashboard {
        baseName = "codekvast-dashboard-$codekvastVersion"
        contents {
            from tasks.getByPath(':product:dashboard:bootRepackage'), {
                rename { 'codekvast-dashboard.jar' }
            }
            from tasks.getByPath(':product:dashboard:processResources'), {
                include 'exposed-application.properties'
                rename { 'application.properties' }
            }
            from tasks.getByPath(':product:docs:asciidoctor'), {
                exclude 'html5/**'
                exclude 'images/**'
            }
            from file("$rootDir/RELEASE-NOTES.md")
            from file("$rootDir/LICENSE")
        }
    }

}

def stageDir = file("$buildDir/bintrayStage")

task bintrayStage(type: Sync) {
    from agentDistZip
//    from dashboardDistZip
//    from tasks.getByPath(':product:docs:asciidoctor'), {
//        include 'CodekvastUserManual.html'
//        rename { "CodekvastUserManual-${codekvastVersion}.html" }
//    }
//    from file("$rootDir/RELEASE-NOTES.md")

    into stageDir
}

bintrayUpload.dependsOn bintrayStage

bintray {
    // These are supposed to be defined in $HOME/.gradle/gradle.properties
    user = project.findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.findProperty('bintrayKey') ?: System.getenv('BINTRAY_KEY')

    filesSpec {
        from stageDir
        into "/"
    }

    dryRun = false
    publish = true

    pkg {
        userOrg = bintrayUserOrg
        repo = 'codekvast'
        name = 'distributions'
        desc = 'Codekvast is a Runtime Intelligence tool used for identifying Truly Dead Code, i.e., code that no-one has accessed in a certain period of time.'
        websiteUrl = 'http://www.codekvast.io'
        vcsUrl = 'https://github.com/crispab/codekvast.git'
        issueTrackerUrl = 'https://github.com/crispab/codekvast/issues'
        licenses = ['MIT']
        labels = ['runtime-intelligence', 'dead-code', 'dead-code-detector', 'truly-dead-code', 'YANIA', 'java', 'java-6', 'jvm']
        githubRepo = 'crispab/codekvast'
        githubReleaseNotesFile = 'RELEASE-NOTES.md'
        publicDownloadNumbers = true

        version {
            name = project.codekvastVersion
            vcsTag = project.gitIdFull
            released = project.gitTimeIso
        }
    }
}

task bintrayUploadContent(type: Exec, dependsOn: bintrayUpload) {
    group "Publishing"
    description "Work-around for bug in gradle-bintray-plugin"

    inputs.dir stageDir

    def argsList = []

    doFirst {
        def user = project.findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
        def key = project.findProperty('bintrayKey') ?: System.getenv('BINTRAY_KEY')

        argsList = ['--user', "$user:$key", '--progress-bar', '--fail',
                       "https://api.bintray.com/content/$bintrayUserOrg/codekvast/distributions/$codekvastVersion/$codekvastVersion/?publish=1"]

        stageDir.eachFile {
            argsList << '--upload-file' << it.name
        }
    }

    workingDir "$buildDir/bintrayStage"
    executable "curl"
    args argsList
}

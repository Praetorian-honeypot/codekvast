apply plugin: 'distribution'
apply plugin: 'com.jfrog.bintray'
description = 'Packaging Codekvast for distribution'

distributions {

    agent {
        baseName = "codekvast-agent-$codekvastVersion"
        contents {
            from(file('src/dist/codekvast.conf')) {
                expand(project.properties)
            }

            from(tasks.getByPath(':product:java-agent:javaagents'))

            from(tasks.getByPath(':product:docs:asciidoctor')) {
                include 'CodekvastUserManual.html'
                rename { "CodekvastUserManual-${codekvastVersion}.html" }
            }

        }
    }

    warehouse {
        baseName = "codekvast-warehouse-$codekvastVersion"
        contents {
            from tasks.getByPath(':product:warehouse:bootRepackage'), {
                rename { 'codekvast-warehouse.jar' }
            }
            from tasks.getByPath(':product:warehouse:processResources'), {
                include 'exposed-application.properties'
                rename { 'application.properties' }
            }
            from tasks.getByPath(':product:docs:asciidoctor'), {
                exclude 'html5/**'
                exclude 'images/**'
            }
            from file("$rootDir/RELEASE-NOTES.md")
            from file('$rootDir/LICENSE')
        }
    }

}

task bintrayStage(type: Sync) {
    from agentDistZip
    from warehouseDistZip
    from tasks.getByPath(':product:docs:asciidoctor'), {
        include 'CodekvastUserManual.html'
        rename { "CodekvastUserManual-${codekvastVersion}.html" }
    }
    from file("$rootDir/product/warehouse/src/docker/codekvast-warehouse.sh")
    from file("$rootDir/RELEASE-NOTES.md")

    into "$buildDir/bintrayStage"
}

bintray {
    // These are supposed to be defined in $HOME/.gradle/gradle.properties
    user = project.findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.findProperty('bintrayKey') ?: System.getenv('BINTRAY_KEY')

    filesSpec {
        from bintrayStage
        into codekvastVersion
    }

    dryRun = false
    publish = true

    pkg {
        userOrg = bintrayUserOrg
        repo = 'codekvast'
        name = 'distributions'
        desc = 'Codekvast is a Runtime Intelligence tool used for identifying Truly Dead Code, i.e., code that no-one has accessed in a certain period of time.'
        websiteUrl = 'http://www.codekvast.io'
        vcsUrl = 'https://github.com/crispab/codekvast.git'
        issueTrackerUrl = 'https://github.com/crispab/codekvast/issues'
        licenses = ['MIT']
        labels = ['runtime-intelligence', 'dead-code', 'dead-code-detector', 'truly-dead-code', 'YANIA', 'java', 'java-6', 'jvm']
        githubRepo = 'crispab/codekvast'
        githubReleaseNotesFile = 'RELEASE-NOTES.md'
        publicDownloadNumbers = true

        version {
            name = project.codekvastVersion
            vcsTag = project.gitIdFull
            released = project.gitTimeIso
        }
    }
}

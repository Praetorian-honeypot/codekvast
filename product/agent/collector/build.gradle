import java.nio.charset.Charset
import java.util.jar.JarFile
import java.util.zip.ZipEntry
import java.util.zip.ZipInputStream

apply from: "$rootDir/gradle/java-7.gradle"
apply from: "$rootDir/gradle/license.gradle"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.unbroken-dome.test-sets'

description = "The collector part of Codekvast, the code that runs inside the instrumented app's JVM"
archivesBaseName = "codekvast-collector"
version = codekvastVersion

configurations {
    aspectjweaver
    jacocoagent
    sampleappRuntime
}

testSets {
    integrationTest
}
check.dependsOn integrationTest

dependencies {
    compile project(":product:agent:agent-lib")
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    compileOnly aspectjWeaver
    compileOnly lombok

    aspectjweaver aspectjWeaver

    testCompile aspectjWeaver
    testCompile lombok
    testCompile testFrameworks

    testRuntime logback

    integrationTestCompile project(":product:testsupport")
    integrationTestRuntime logback

    jacocoagent 'org.jacoco:org.jacoco.agent:0.7.9:runtime@jar'

    sampleappRuntime logback
}

shadowJar {
    classifier = 'all'
    inputs.file file('build.gradle')

    manifest {
        attributes(
            "Premain-Class": "io.codekvast.agent.collector.CodekvastCollector",
            "Implementation-Title": archivesBaseName,
            "Implementation-Version": codekvastDisplayVersion
        )
    }

    relocate 'javassist', 'codekvast.javassist'
    relocate 'javax.validation', 'codekvast.javax.validation'
    relocate 'com', 'codekvast.com'
    relocate 'org.reflections', 'codekvast.org.reflections'
    relocate 'okhttp3', 'codekvast.okhttp3'
    relocate 'okio', 'codekvast.okio'
}

task verifyShadowJar {
    group "Verification"
    description "Verifies that the shadow collector jar is correctly relocated to avoid class conflicts"

    inputs.files shadowJar.outputs.files

    doLast {
        def shadowJarFile = file(shadowJar.outputs.files.asPath)
        logger.info("Verifying relocations in {}", shadowJarFile)

        ZipInputStream zipInputStream = new ZipInputStream(new BufferedInputStream(new FileInputStream(shadowJarFile)))
        InputStreamReader reader = new InputStreamReader(zipInputStream, Charset.forName("UTF-8"))

        ZipEntry zipEntry
        while ((zipEntry = zipInputStream.getNextEntry()) != null) {
            def name = zipEntry.getName()
            if (name.endsWith(".class")
                && !name.startsWith("io/codekvast/")
                && !name.startsWith("codekvast/")
                && !name.startsWith("org/aspectj/")
                && !name.startsWith("org/slf4j/")) {
                throw new IllegalStateException("Class not relocated in shadowJar: $name")
            }
        }

        assert shadowJarFile.length() < 7_000_000 // bytes, it is currently approx. 5.7 MB
    }
}
check.dependsOn verifyShadowJar

integrationTest {
    inputs.files shadowJar.outputs.files

    systemProperty 'integrationTest.codekvastCollector', shadowJar.outputs.files.asPath
    systemProperty 'integrationTest.aspectjweaver', configurations.aspectjweaver.asPath
    systemProperty 'integrationTest.jacocoagent', "${configurations.jacocoagent.asPath}=destfile=build/jacoco/integrationTest2.exec,output=file,dumponexit=true"
    systemProperty 'integrationTest.classpath', "build/classes/integrationTest/:$configurations.sampleappRuntime.asPath"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task javaagents(type: Sync) {
    from configurations.aspectjweaver
    from tasks.shadowJar
    into "$buildDir/javaagents"
}

apply plugin: 'maven-publish'
publishing {
    publications {
        shadowJar(MavenPublication) {
            groupId 'io.codekvast'
            artifactId 'codekvast-collector'
            version codekvastVersion
            from components.shadow
            artifact sourcesJar { classifier "sources" }
            artifact javadocJar { classifier "javadoc" }
        }
    }
}

bintray {
    // These are supposed to be defined in $HOME/.gradle/gradle.properties
    user = project.findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.findProperty('bintrayKey') ?: System.getenv('BINTRAY_KEY')

    publications = ['shadowJar']

    dryRun = false
    publish = true

    pkg {
        userOrg = 'crisp'
        repo = 'maven-repo'
        name = 'codekvast-collector'
        desc = 'The javaagent part of Codekvast.'
        websiteUrl = 'http://codekvast.crisp.se'
        vcsUrl = 'https://github.com/crispab/codekvast.git'
        issueTrackerUrl = 'https://github.com/crispab/codekvast/issues'
        licenses = ['MIT']
        githubRepo = 'crispab/codekvast'
        githubReleaseNotesFile = 'RELEASE-NOTES.md'
        publicDownloadNumbers = true

        version {
            name = project.codekvastVersion
            vcsTag = project.gitIdFull
            released = project.gitTimeIso
        }

    }
}

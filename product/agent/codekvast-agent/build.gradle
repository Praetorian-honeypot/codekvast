import org.apache.tools.ant.filters.ReplaceTokens

buildscript { dependencies { classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion" } }
plugins {
    id 'java'
    id 'application'
    id 'com.ofg.uptodate' version "1.1.0"
}
apply plugin: 'spring-boot'

description = "The Codekvast agent"
archivesBaseName = "codekvast-agent"
version = project.parent.parent.version
sourceCompatibility = 1.7
targetCompatibility = 1.7
mainClassName = "se.crisp.codekvast.agent.main.CodekvastAgentApplication"

dependencies {
    compile "ch.qos.logback:logback-classic"
    compile "org.reflections:reflections:0.9.9"
    compile "org.springframework.boot:spring-boot-starter"
    compile lombok
    compile project(":product:agent:util")
    compile project(":product:server:agent-api")

    testCompile junit
    testCompile mockito
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/application.properties'
        filter(ReplaceTokens, tokens: gitVersionTokens + ['gradle.name'       : project.name,
                                                          'gradle.description': project.description,
                                                          'gradle.version'    : project.version]
        )
    }
}

jar {
    exclude "lombok"
}

run {
    jvmArgs = ['-ea']
    args = ["--codekvast.serverUploadIntervalSeconds=5"]
}

bootRun {
    jvmArgs = run.jvmArgs
    args = run.args
}

jar.dependsOn tasks.getByPath(":product:agent:util:test")

applicationDistribution.from("src/main/resources") {
    into "conf"
    include "logback.xml", "default.properties"
    rename {
        def name = it == "default.properties" ? "codekvast-agent.properties" : it
        "${name}.sample.${version}"
    }
}

applicationDistribution.from("src/main/resources") {
    into "conf"
    include "codekvast-collector.conf.sample"
    rename {
        "${it}.${version}"
    }
}

applicationDistribution.from("src/dist") {
    into "/"
    filter { it.replace("@CODEKVAST_VERSION@", project.version).replace("@ASPECTJ_VERSION@", aspectjVersion) }
}

apply from: "$rootDir/gradle/sources-javadoc.gradle"

startScripts {
    doLast {
        outputs.files.each { script ->
            logger.info "Adjusting CLASSPATH in {} to start with \$APP_HOME/conf/ ...", script.name
            if (script.name.toLowerCase().endsWith('.bat')) {
                script.text = script.text.replace('CLASSPATH=%APP_HOME%\\lib', 'CLASSPATH=%APP_HOME%\\conf\\;%APP_HOME%\\lib')
            } else {
                script.text = script.text.replace('CLASSPATH=$APP_HOME/lib', 'CLASSPATH=$APP_HOME/conf/:$APP_HOME/lib')
            }
        }
    }
}

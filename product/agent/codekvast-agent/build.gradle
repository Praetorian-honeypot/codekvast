buildscript { dependencies { classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion" } }
apply from: "$rootDir/gradle/java.gradle"
apply plugin: 'spring-boot'
apply plugin: 'application'

description = "The Codekvast agent"
archivesBaseName = "codekvast-agent"
version = project.parent.parent.version
sourceCompatibility = 1.7
mainClassName = "se.crisp.codekvast.agent.main.CodekvastAgentMain"

dependencies {
    compile "ch.qos.logback:logback-classic"
    compile "org.aspectj:aspectjweaver:$aspectjVersion"
    compile "org.reflections:reflections:0.9.9"
    compile "org.springframework.boot:spring-boot-starter"
    compile lombok
    compile project(":product:agent:util")
    compile project(":product:server:agent-delegate")

    testCompile junit
    testCompile mockito
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

jar {
    exclude "lombok"
}

test.dependsOn ":sample:standalone-app:jar"

// We collector the sample standalone-app by default...
run {
    dependsOn = [":sample:standalone-app:installApp", ":sample:standalone-app:generateCodekvastConfig"]
    args tasks.getByPath(":sample:standalone-app:generateCodekvastConfig").configFile
    // args "/usr/local/src/ws/tnm/tnm_mainserver_main/codekvast.properties"
}

jar.dependsOn tasks.getByPath(":product:agent:util:test")

applicationDistribution.from("src/main/resources") {
    into "conf"
    include "logback.xml"
    rename { "${it}.sample" }
}

applicationDistribution.from(tasks.getByPath(":product:agent:util:test").sampleConfigFile) {
    into "conf"
}

startScripts {
    doLast {
        outputs.files.each { script ->
            logger.info "Adjusting CLASSPATH in {} to start with \$APP_HOME/conf/ ...", script.name
            def text = script.text
            text = text.replace('CLASSPATH=$APP_HOME/lib', 'CLASSPATH=$APP_HOME/conf/:$APP_HOME/lib')
            script.text = text
        }
    }
}

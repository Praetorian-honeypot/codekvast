#!/bin/sh
#
# codekvast-agent    Start and stop the Codekvast Agent
#
# chkconfig:   345 90 10
# description: Codekvast Agent

### BEGIN INIT INFO
# Provides: codekvast-agent
# Required-Start: $local_fs $remote_fs $network $named $syslog $time
# Required-Stop: $local_fs $remote_fs $network $named $syslog $time
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start and stop the Codekvast Agent
# Description:       The Codekvast Agent uploads invokation data delivered by codekvast-collector to a codekvast-server.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

installDir="/opt/codekvast-agent"
service="codekvast-agent"
exec="${installDir}/bin/codekvast-agent"
logDir="${installDir}/log"

lockfile=/var/lock/subsys/$service

start_server() {
    app="$1"
    pidfile="/var/run/$service.pid"
    exec="${installDir}/bin/$service"
    logfile="${logDir}/$service.out"
    echo -n "$service "
    nohup $exec $args < /dev/null > $logfile 2>&1 &
    echo $! >> $pidfile
}

start() {
    [ -x $exec ] || exit 5
    echo -n "Starting $service: "
    start_server $service
    retval=$?
    [ $retval -eq 0 ] && touch $lockfile
    echo
    return $retval
}

stop() {
    echo -n $"Stopping $service: "
    # stop it here, often "killproc $service"
    killproc $service
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $service
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    status)
        rh_status
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart}"
        exit 2
esac
exit $?

# info.build.* is visible in /management/info
info.build.gradle.name                         = ${project.archivesBaseName}
info.build.gradle.description                  = ${project.description}
info.build.gradle.version                      = ${project.codekvastDisplayVersion}
info.build.git.id                              = ${project.gitId}
info.build.git.committer                       = ${project.gitCommitter}
info.build.git.message                         = ${project.gitShortMessage}
info.build.git.time                            = ${project.gitTime}

# application.title and application.version are shown in the banner on the console
application.title                              = Codekvast Login
application.version                            = ${project.codekvastDisplayVersion}

# codekvast.* are available in CodekvastLoginSettings.java
codekvast.applicationName                      = ${project.archivesBaseName}
codekvast.displayVersion                       = ${project.codekvastDisplayVersion}
codekvast.committer                            = ${project.gitCommitter}
codekvast.commitDate                           = ${project.gitTime}
codekvast.commitMessage                        = ${project.gitShortMessage}

# Which is our service port?
server.port                                    = 8080

# Set up stuff needed by the Spring Security OAuth dance...
server.use-forward-headers                     = true
server.servlet.session.cookie.max-age          = 300
server.servlet.session.persistent              = false

# Enable web server access log
server.undertow.accesslog.enabled              = true
server.undertow.accesslog.prefix               = access.
server.undertow.accesslog.pattern              = combined
server.undertow.accesslog.dir                  = build/log

# Heroku stuff
codekvast.herokuApiPassword                    = herokuApiPassword
codekvast.herokuApiSsoSalt                     = herokuApiSsoSalt
codekvast.herokuCodekvastUrl                   = http://localhost:8080

# To where should we redirect after a login?
codekvast.dashboardBaseUrl                     = http://localhost:8081

# What secret do we use when we create JWT tokens for the dashboard?
codekvast.dashboardJwtSecret                   = secret
codekvast.dashboardJwtExpirationHours          = 168

codekvast.slackWebHookUrl                      = https://hooks.slack.com/services
# Empty means Slack webhook is disabled
codekvast.slackWebHookToken                    =
codekvast.dnsCname                             = localhost

# Override when running webapp in webpack-dev-server
codekvast.loginSuccessUrl                      = /start

# Management stuff
management.server.servlet.context-path         = /management
management.server.port                         = 9080
management.endpoints.jmx.domain                = CodekvastLogin

# Security properties
# TODO security.ignored                               = /management/**, **.js, **.html, **.css, /assets/**

# HTTP settings
spring.http.converters.preferred-json-mapper   = gson

# Database properties
spring.datasource.url                          = jdbc:mariadb://localhost/codekvast
spring.datasource.username                     = codekvast
spring.datasource.password                     = codekvast
spring.datasource.hikari.connection-test-query = SELECT 1 FROM DUAL

spring.flyway.validate-on-migrate              = false
spring.flyway.table                            = schema_version

# Logging settings
logging.file                                   = build/log/login.log
logging.level.io.codekvast                     = DEBUG
spring.output.ansi.enabled                     = detect

# OAuth settings (except secrets)
facebook.client.accessTokenUri                 = https://graph.facebook.com/oauth/access_token
facebook.client.userAuthorizationUri           = https://www.facebook.com/dialog/oauth
facebook.client.tokenName                      = oauth_token
facebook.client.authenticationScheme           = query
facebook.client.clientAuthenticationScheme     = form
facebook.client.scope                          = email,public_profile
facebook.resource.userInfoUri                  = https://graph.facebook.com/me?fields=id,name,email,link

github.client.accessTokenUri                   = https://github.com/login/oauth/access_token
github.client.userAuthorizationUri             = https://github.com/login/oauth/authorize
github.client.clientAuthenticationScheme       = form
github.resource.userInfoUri                    = https://api.github.com/user

google.client.accessTokenUri                   = https://www.googleapis.com/oauth2/v4/token
google.client.userAuthorizationUri             = https://accounts.google.com/o/oauth2/v2/auth
google.client.scope                            = email,profile
google.client.clientAuthenticationScheme       = form
google.resource.userInfoUri                    = https://www.googleapis.com/oauth2/v3/userinfo

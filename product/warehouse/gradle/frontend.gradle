//--- Frontend -----------------------------------------------------------------------------------

task npmInstall(type: Exec) {
    description 'Installs the node modules required for frontend development'
    group 'Frontend Development'

    workingDir 'src/webapp'
    commandLine 'npm', 'install'

    inputs.file file('package.json')
    inputs.file file('typings.json')
    outputs.dir fileTree('node_modules')
    outputs.dir fileTree('typings')
}

task npmTest(type: Exec) {
    description "Runs Typescript unit tests with Karma and Jasmine"
    group "Frontend Development"

    dependsOn npmInstall
    mustRunAfter test

    def timestampFile = file("$projectDir/build/npmTest.timestamp")

    inputs.file 'src/webapp/package.json'
    inputs.file 'src/webapp/tsconfig.json'
    inputs.file 'src/webapp/webpack.config.json'
    inputs.files fileTree('config')
    inputs.files fileTree('src/webapp/src')
    inputs.file timestampFile
    outputs.file timestampFile

    workingDir 'src/webapp'
    executable 'npm'
    args 'run', 'test'

    doLast {
        "touch ${timestampFile.absolutePath}".execute()
    }
}
check.dependsOn npmTest


task npmStart(type: Exec) {
    description 'Starts the webpack dev server on port 3000'
    group 'Frontend Development'

    dependsOn npmInstall

    workingDir 'src/webapp'
    executable 'npm'
    args 'start'
}

task npmBuild(type: Exec) {
    description "Builds the frontend webpack bundles for production"
    group "Frontend Development"
    dependsOn npmTest

    inputs.file file('src/webapp/package.json')
    inputs.file file('src/webapp/tsconfig.json')
    inputs.file file('src/webapp/webpack.config.json')
    inputs.files fileTree('src/webapp/config')
    inputs.files fileTree('src/webapp/src')

    outputs.files fileTree('src/webapp/dist')

    workingDir file('src/webapp')
    executable 'npm'
    args 'run', 'build'
    environment['CODEKVAST_VERSION']=codekvastDisplayVersion
}

task npmClean(type: Exec) {
    description "Cleans the frontend webpack bundles"
    group "Frontend Development"

    workingDir file('src/webapp')
    executable 'npm'
    args 'run', 'clean'
}

clean.dependsOn npmClean

jar {
    dependsOn npmBuild

    // Spring Boot automatically serves static content from static/**

    // Output from npmBuild
    into('static') {
        from('src/webapp/dist') {
            exclude '**/*.css.map'
            exclude '**/*.js.map'
        }
    }
}

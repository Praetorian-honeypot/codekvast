apply plugin: 'war'
apply plugin: 'jetty'

sourceCompatibility = 1.6
archivesBaseName = "sample-t5"

dependencies {
    compile "org.apache.tapestry:tapestry-core:5.3.6"
    runtime "ch.qos.logback:logback-core:1.1.2"
}

// Get rid of Commons Logging and Log4j...
configurations {
    all*.exclude group: "commons-logging", module: "commons-logging"
    all*.exclude group: "log4j", module: "log4j"
    all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
}

jettyRun {
    reload = "automatic"
    scanIntervalSeconds = 5
    contextPath = ""
}

ext.duckDataPath = "/tmp/duck/agent/Crisp/" + archivesBaseName

task generateDuckConfig {
    group = "Build"
    description = "Generates a duck.properties for test"

    ext.configFile = file("build/libs/duck.properties")

    inputs.file file("$projectDir/build.gradle")
    outputs.file configFile

    doLast {
        configFile.parentFile.mkdirs()
        configFile.text = """# Run Duck against Crisp Sample App
customerName = Crisp
appName = $archivesBaseName
environment = development
codeBaseUri = file:/maven/${archivesBaseName}.war
dataPath = $duckDataPath
packagePrefix = se.crisp.sample
warehouseUri = http://localhost:8180
sensorDumpIntervalSeconds = 10
warehouseUploadIntervalSeconds = 5
aspectjOptions = -verbose
verbose = true
"""
    }
}

assemble.dependsOn generateDuckConfig

task dockerRunWarInTomcat7(type: Exec) {
    description = "Deploys the sample war to Tomcat7 inside a Docker container, accessible at http://localhost:8080/sample"
    group = "Test"
    dependsOn assemble

    def duckVersion = rootProject.childProjects["product"].version

    executable = "docker"
    args = ["run", "--rm",
            "-v", "$duckDataPath:$duckDataPath",
            "-v", "$buildDir/libs:/maven",
            "-v", "$rootDir/agent/sensor/build/distributions/:/duck",
            "-e", "JAVA_OPTS=-javaagent:/duck/sensor-$duckVersion-shadow.jar=/maven/duck.properties",
            "-e", "LANG=C.UTF-8",
            "-p", "8080:8080",
            "jolokia/tomcat-7.0",
    ]

    doFirst {
        println "Deploying $project.name to Tomcat7, access it at http://localhost:8080/sample"
    }
}

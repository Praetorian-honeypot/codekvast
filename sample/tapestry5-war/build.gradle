plugins {
    id 'war'
    id 'jetty'
}

sourceCompatibility = 1.6
archivesBaseName = "sample-t5"

dependencies {
    compile "org.apache.tapestry:tapestry-core:5.3.6"
    runtime "ch.qos.logback:logback-core:1.1.2"
}

// Get rid of Commons Logging and Log4j...
configurations {
    all*.exclude group: "commons-logging", module: "commons-logging"
    all*.exclude group: "log4j", module: "log4j"
    all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
}

jettyRun {
    reload = "automatic"
    scanIntervalSeconds = 5
    contextPath = ""
}

task generateCodekvastConfig {
    group = "Build"
    description = "Generates a codekvast.conf for test"

    ext.configFile = file("build/libs/codekvast.conf")

    inputs.file file("$projectDir/build.gradle")
    outputs.file configFile

    doLast {
        configFile.parentFile.mkdirs()
        configFile.text = """# Run Codekvast against Crisp Sample App
customerName = Sample
appName = $archivesBaseName
appVersion = $version
environment = development
codeBaseUri = file:/maven/${archivesBaseName}.war
packagePrefixes = se.crisp.sample, foo.bar
serverUri = http://localhost:8080
apiAccessID = agent
apiAccessSecret = 0000
collectorResolutionSeconds = 10
serverUploadIntervalSeconds = 5
aspectjOptions = -verbose
verbose = true
"""
    }
}

assemble.dependsOn generateCodekvastConfig

configurations { aspectj }
dependencies { aspectj 'org.aspectj:aspectjweaver:1.8.2' }

task dockerRunWarInTomcat7(type: Exec) {
    def tomcatVersion = "tomcat-7.0"
    def port = 8080

    description = "Deploys $project.name to $tomcatVersion inside a Docker container, access it at http://localhost:$port/$project.name"
    group = "Web application"
    dependsOn "assemble", ":product:agent:collector:assemble"

    def codekvastCollector = new File(tasks.getByPath(":product:agent:collector:shadowJar").outputs.files.asPath)
    def aspectjWeaver = configurations.aspectj.asPath

    executable = "docker"
    args = ["run", "--rm",
            "-v", "/tmp/codekvast:/tmp/codekvast",
            "-v", "$buildDir/libs:/maven",
            "-v", "$codekvastCollector.parentFile:/codekvast",
            "-e", "JAVA_OPTS=-javaagent:/codekvast/$codekvastCollector=/maven/codekvast.conf -javaagent:/codekvast/$aspectjWeaver",
            "-e", "LANG=C.UTF-8",
            "-p", "$port:8080",
            "jolokia/$tomcatVersion",
    ]

    doFirst {
        new File("/tmp/codekvast").mkdirs()
        logger.lifecycle description
        logger.info "{} {}", executable, args.join(" ")
    }
}

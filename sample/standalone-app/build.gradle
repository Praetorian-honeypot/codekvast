apply from: "$rootDir/gradle/java-6.gradle"
apply plugin: 'application'

mainClassName = "sample.app.SampleApp"
archivesBaseName = "standalone-app"

dependencies {
    compile "org.projectlombok:lombok:1.16.4"
    compile "org.slf4j:slf4j-api:1.7.12"
    compile "aopalliance:aopalliance:1.0"
    compile 'com.google.inject:guice:4.0'
    compile project(":sample:standalone-lib")
}

task generateCodekvastConfig {
    group "Build"
    description "Generates a codekvast.conf for test"

    ext.configFile = file("$buildDir/codekvast.conf")

    inputs.file file("build.gradle")
    outputs.file configFile

    doLast {
        configFile.parentFile.mkdirs()
        configFile.text = """# Run Codekvast against Crisp Sample App
appName = $archivesBaseName
appVersion = $version
tags = development, sample
codeBase = ${file("build/install/${project.name}/lib/")}
packagePrefixes = sample. , foo.bar.
methodVisibility = all
collectorResolutionSeconds = 2
aspectjOptions = -verbose -showWeaveInfo
clobberAopXml = true
verbose = true
"""
    }
}

processResources.dependsOn generateCodekvastConfig

configurations {
    aspectjtools
    aspects
// aspectjweaver
}

dependencies {
    aspectjtools 'org.aspectj:aspectjtools:1.8.5'

    aspects project(":sample:standalone-aspect")
    runtime project(":sample:standalone-aspect")

    // aspectjweaver 'org.aspectj:aspectjweaver:1.8.5'
}

/*
run {
    dependsOn = [":product:agent:collector:shadowJar", "generateCodekvastConfig"]
    def codekvastCollector = tasks.getByPath(":product:agent:collector:shadowJar").outputs.files.asPath
    def aspectjWeaver = configurations.aspectjweaver.asPath

    jvmArgs = [
            "-Dcodekvast.configuration=$generateCodekvastConfig.configFile",
            "-javaagent:$codekvastCollector",
            "-javaagent:$aspectjWeaver"
    ]
}
*/

task weaveAspects {
    dependsOn classes

    def inpath = "$buildDir/classes/main"
    def destDir = "$buildDir/woven/classes"
    def logFile = "$buildDir/aspectj.log"

    inputs.dir inpath
    outputs.dir destDir

    def iajcArgs = [destDir      : destDir,
                    source       : project.convention.plugins.java.sourceCompatibility,
                    target       : project.convention.plugins.java.targetCompatibility,
                    inpath       : inpath,
                    xlint        : "ignore",
                    fork         : 'true',
                    aspectPath   : project.configurations.aspects.asPath,
                    showWeaveInfo: 'true',
                    log          : logFile
    ]

    ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties",
            classpath: project.configurations.aspectjtools.asPath)

    doLast {
        mkdir destDir
        ant.iajc(iajcArgs)
    }
}

jar {
    dependsOn weaveAspects
    from "$buildDir/woven/classes"
}

startScripts {
    doLast {
        outputs.files.each { scriptDir ->
            scriptDir.eachFile { script ->
                script.text = script.text
                        .replace('APP_HOME=', 'export APP_HOME=')
                        .replace('APP_NAME=', 'export APP_NAME=')
            }
        }
    }
}
